@{
    ViewBag.Title = "AddContactRequest";
}
<div data-role="page" id="request-page" class="full" data-add-back-btn="true">
  @{ Html.RenderPartial("TitleBar"); }
    <div data-role="header" data-position="fixed" class="header-pdthx" data-theme="c">
        <h1>
            Enter Recipient</h1>
    </div>
    <div data-role="content" class="content">
        <div class="pad">
         <ul data-role="listview" class="ui-listview" data-filter="true" data-filter-placeholder="Type Email Address, Phone #, MeCode or Friend's Name">
        @foreach (var alphaGroup in Model.SortedContacts)
        {
            <li data-role="list-divider">@alphaGroup.Key</li>
            foreach (var friend in alphaGroup.Value)
            {
                    <li>
                    <a class="contact-recipient-uri" recipient-uri="fb_@friend.id" recipient-type="facebook" recipient-name="@friend.name">
                        <img src="@String.Format("http://graph.facebook.com/{0}/picture?type=large", friend.id)" />
                        @friend.name
                    </a>
                    </li>
            }
        }
                    <li id="no-results">
                    <a id="new-recipient-uri" class="send-recipient-uri" recipient-uri="" recipient-type="new" >
                        <img src="@Url.Content("~/Content/images/avatar.png")" />
                        <span id="results-header">
                        No matches found 
                        </span>
                        <br />
                        <span id="results-description">
                        Continue type or check entry
                       </span>
                   </a>
                    </li>
                </ul>
            </div>
        </div>
        
    <script language="javascript">
        //wait to do event binding until the page is being initialized
        $(document).delegate('[data-role="page"]', 'pageinit', function () {

            //cache the list-view element for later use
            var $listview = $(this).find('[data-role="listview"]');

            //delegate event binding since the search widget is added dynamically
            //bind to the `keyup` event so we can check the value of the input after the user types
            $(this).delegate('input[data-type="search"]', 'keyup', function () {

                var searchVal = $(this).delegate('input[data-type="search"]').val();

                //check to see if there are any visible list-items that are not the `#no-results` element
                if ($listview.children(':visible').not('#no-results').length === 0) {

                    //if none are found then fadeIn the `#no-results` element
                    $('#no-results').fadeIn(500);
                    if (isValidEmailAddress(searchVal)) {
                        $("#results-header").text(searchVal);
                        $("#results-description").text("New Email Recipient");
                        $("#new-recipient-uri").attr('recipient-uri', searchVal);
                    } else if (isValidPhoneNumber(searchVal)) {
                        $("#results-header").text(searchVal);
                        $("#results-description").text("New Phone Recipient");
                        $("#new-recipient-uri").attr('recipient-uri', searchVal);
                    }
                    else {
                        $("#results-header").text("No matches found");
                        $("#results-description").text("Continue type or check entry");
                        $("#recipient-uri").val('');
                    }
                } else {

                    //if results are found then fadeOut the `#no-results` element which has no effect if it's already hidden
                    $('#no-results').fadeOut(250);
                }
            });
            $(".contact-recipient-uri").unbind("click").bind("click", function () {

                var recipientUri = $(this).attr('recipient-uri');
                var recipientName = $(this).attr('recipient-name');
                var recipientType = $(this).attr('recipient-type');

                var model = {
                    RecipientUri: recipientUri,
                    RecipientName: recipientName,
                    RecipientType: recipientType
                };

                $.mobile.changePage(getBaseURL() + 'Request/AddContactRequest', {
                    data: model,
                    dataUrl: getBaseURL() + 'Request/Index',
                    reverse: true,
                    transition: 'slide',
                    type: 'post'
                });

            });
            $("#new-recipient-uri").unbind("click").bind("click", function () {

                var recipientUri = $(this).attr('recipient-uri');
                var recipientName = $(this).attr('recipient-uri');
                var recipientType = $(this).attr('recipient-type');

                var model = {
                    RecipientUri: recipientUri,
                    RecipientName: recipientName,
                    RecipientType: recipientType
                };

                $.mobile.changePage(getBaseURL() + 'Request/AddContactRequest', {
                    data: model,
                    dataUrl: getBaseURL() + 'Request/Index',
                    reverse: true,
                    transition: 'slide',
                    type: 'post'
                });

            });
        });
        
</script>
</div>
