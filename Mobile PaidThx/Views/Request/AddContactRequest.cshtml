@model Mobile_PaidThx.Models.RequestModels.AddContactRequestModel
@{
    ViewBag.Title = "AddContactRequest";
    ViewBag.PageID = "request-contact-select-page";
    ViewBag.Classes = "page page full";
}
<div  id="@ViewBag.PageID" class="@ViewBag.Classes"  >
  
    <div data-role="header" class="header-pdthx" >
        <h1>
            Request From:</h1>
             <a href="@Url.Content("~/Request")"  class="hd-btn-left btn-back history">Back</a>
    </div>
    <div data-role="content" class="content">
        <div class="pad">
          <input type="text" data-type="search" class="ui-input-text ui-body-c"/>
        <ul id="contactsList" data-role="listview" class="ui-listview" data-filter="true" data-filter-placeholder="Type a New Phone #/Email or Search">
        @foreach (var alphaGroup in Model.SortedContacts)
        {
            <li data-role="list-divider">@alphaGroup.Key</li>
            foreach (var friend in alphaGroup.Value)
            {
                    <li class="contact removable">
                    @using(Html.BeginForm()) {
                        @Html.Hidden("recipientUri", "fb_" + @friend.id)
                        @Html.Hidden("recipientType", "facebook")
                        @Html.Hidden("recipientName", @friend.name);
                    <a class="contact-recipient-uri">
                        <img class="list-thumbnail lazy" src="@Url.Content("~/Content/images/avatar.png")" data-original="@String.Format("http://graph.facebook.com/{0}/picture?type=square", friend.id)" />
                        <h2 class="heading">@friend.name</h2>
                        <h4 class="subheading">Facebook Friend</h4>
                    </a>
                    }
                    </li>
            }
        }
         <li id="contact-no-results-divider" class="contact-no-results-item" data-role="list-divider">No Results Found</li>
         <li id="contact-no-results" class="contact-no-results-item">
                     <li id="contact-no-results" class="contact-no-results-item">
                    @using(Html.BeginForm()) {
                    @Html.Hidden("recipientUri", "", new Dictionary<string, object> {{ "id", "contact-new-recipient-uri"}})
                    @Html.Hidden("recipientType", "new", new Dictionary<string, object> {{ "id", "contact-new-recipient-type"}})
                    @Html.Hidden("recipientName", "", new Dictionary<string, object> {{ "id", "contact-new-recipient-name"}});
                    <a id="contact-new-recipient-link" class="contact-new-recipient" data-uri-valid="0">
                        <img src="@Url.Content("~/Content/images/avatar.png")" />
                        <h2 id="results-header" class="heading">
                        No contacts...yet
                        </h2>
                         <h4 id="results-description" class="subheading">
                        Type a new email or phone # above
                       </h4>
                   </a>
                        }
               </li>
               <li id="me-codes-divider" data-role="list-divider">Me Codes</li>
                </ul>
            </div>
        </div>
</div>
@section PageScripts
{
        <script id="meCodeItem" type="text/x-jquery-tmpl">
    <li>
        <a class="contact-recipient-uri" recipient-uri="${meCode}" recipient-type="meCode" recipient-name="${meCode}">
            <img src="http://graph.facebook.com/1/picture" />
            ${meCode}
        </a>
     </li>
</script>
        
    <script language="javascript">
        //wait to do event binding until the page is being initialized
        $(document).ready(function () {

            $(this).find("img.lazy").lazyload();

            //cache the list-view element for later use
            var $listview = $(this).find('[data-role="listview"]');

            contactsSearchController.init($("#request-contact-select-page"));

            //delegate event binding since the search widget is added dynamically
            //bind to the `keyup` event so we can check the value of the input after the user types
            $('input[data-type="search"]').bind('keyup', function () {

                var searchVal = $(this).delegate('input[data-type="search"]').val();

                if (searchVal.substring(0, 1) == '$') {

                    if (searchVal.length > 3) {
                        $("#me-codes-divider").show();
                        contactsSearchController.searchAndDisplayMeCodes(searchVal);
                    } else {
                        $("#me-codes-divider").hide();
                        contactsSearchController.clearMeCodes();
                    }
                }
                else {
                    $("#me-codes-divider").hide();
                    contactsSearchController.clearMeCodes();


                    //check to see if there are any visible list-items that are not the `#no-results` element
                    if ($listview.children(':visible').not('.contact-no-results-item').length === 0) {
                        contactsSearchController.showNoResults(searchVal);

                    } else {
                        //if results are found then fadeOut the `#no-results` element which has no effect if it's already hidden
                        contactsSearchController.hideNoResults(searchVal);
                    }
                }
            });
            $listview.on("click", ".contact-recipient-uri", function (event) {

                $(this).parents("form:first").submit();

            });
            $listview.on("click", ".contact-new-recipient", function (event) {
                if ($(this).attr('data-uri-valid') == '1')
                    $(this).parents("form:first").submit();
            });
        });
        
</script>
}

