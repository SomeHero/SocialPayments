@model Mobile_PaidThx.Models.JoinModels.JoinModel
@{
    ViewBag.Title = "Index";
}
<div data-role="page" id="page-join" @TempData["DataUrl"]>
    @{ Html.RenderPartial("TitleBar"); }
    <div data-role="header" data-position="fixed" class="header-pdthx" data-theme="c">
        <h1>
             @if (Model.Message != null)
             {<text>You Have Money!</text>}
             else
             {<text>Join</text>}</h1>
             </div>
    <div data-role="content">
        <div class="pad">
        <!--
         <div id="pay-in" class="aui">
                <div class="paystream-aui">
                    <img class="sender" src="../../Content/images/avatar.png" width="50" />
                    <h4 class="aui-message"><span class="sender">Example Sender&nbsp;</span>sent you  $25.56</span>.</h4>
                    <div class="clear"></div>
                </div>

                <span class="bubble">For that rousing game of charades you started last week.</span>​

                </div>
                -->
            @if (Model.Message != null)
            {
                if (Model.Message.MessageType == "Payment")
                {
                <text>

                 <div id="pay-in" class="aui">
                <div class="paystream-aui">
                    <img class="sender" src="@Model.Message.SenderImageUrl" width="50" />
                    <h4 class="aui-message"><span class="sender">@Model.Message.Sender&nbsp;</span>sent you @String.Format("{0:C}", Model.Message.Amount).</h4>
                    <div class="clear"></div>
                </div>
                 @if (!String.IsNullOrEmpty(Model.Message.Comments))
                 {
                <span class="bubble">@Model.Message.Comments - join PaidThx to claim your money.</span>​
                 }
                </div>
                </text>
                }
                if (Model.Message.MessageType == "PaymentRequest")
                {
                <text>

                 <div id="pay-in" class="aui">
                <div class="paystream-aui">
                    <img class="sender" src="@Model.Message.SenderImageUrl" width="50" />
                    <h4 class="aui-message"><span class="sender">@Model.Message.Sender&nbsp;</span>requests @String.Format("{0:C}", Model.Message.Amount) from you.</h4>
                    <div class="clear"></div>
                </div>
                 @if (!String.IsNullOrEmpty(Model.Message.Comments))
                 {
                <span class="bubble">@Model.Message.Comments - join PaidThx to send money.</span>​
                 }
                </div>
                </text>
                }
                if (Model.Message.MessageType == "Pledge")
                {
                <text>

                 <div id="pay-in" class="aui">
                <div class="paystream-aui">
                    <img class="sender" src="@Model.Message.SenderImageUrl" width="50" />
                    <h4 class="aui-message"><span class="sender">@Model.Message.Sender&nbsp;</span>sent you @String.Format("{0:C}", Model.Message.Amount).</h4>
                    <div class="clear"></div>
                </div>
                 @if (!String.IsNullOrEmpty(Model.Message.Comments))
                 {
                <span class="bubble">@Model.Message.Comments - join PaidThx to complete your donation.</span>​
                 }
                </div>
                </text>
                }
            }

            <h5>
                Connect with Facebook</h5>
                <button onclick="location.href='https://www.facebook.com/dialog/oauth?client_id=332189543469634&redirect_uri=@Html.FormatCallbackUrl(Request.Url.Scheme + System.Uri.SchemeDelimiter + Request.Url.Host + Url.Content("~/"), "Join/SignInWithFacebook/&scope=email&state=", Model.FBState)'" type="submit" id="signin-facebook-submit" class="btn-jq" data-theme="d">
                Join with Facebook</button>
            <h5 style="margin-top:25px" id="form-marker">
                Or join with your Email Address</h5>
                @Html.ValidationSummary()
             
            <div id="registration-form">
                @using (Html.BeginForm("Index", "Join", FormMethod.Post, new Dictionary<string, object> { { "id", "frmSubmit" }, { "data-transition", "slideup" }, {"class", "validateMe"} }))
                {
                    <span class="form-holder"><input type="email" id="email" placeholder="Enter Your Email Address"
                        name="email" value="@Model.UserName" /></span>
                    <span class="form-holder"> <input type="password" id="password" placeholder="Create a Password"
                        name="password" /></span>
                    <span class="form-holder" id="confirmPasswordHolder"><input id="confirmPassword" type="password" placeholder="Confirm Your Password"
                        name="confirmPassword" /></span>
                <button type="submit" id="register-submit" data-theme="f" data-icon="check" data-iconpos="right">
                Join with Email</button>
                  <div id="pass" class="hidden">
                  <h4>Password must meet the following requirements:</h4>
	<ul>
		<li id="letter" class="invalid">At least <strong>one letter</strong></li>
		<li id="capital" class="invalid">At least <strong>one capital letter</strong></li>
		<li id="number" class="invalid">At least <strong>one number</strong></li>
		<li id="length" class="invalid">Be at least <strong>6 characters</strong></li>
	</ul>
     </div>
                }
            </div>
            <div id="main-body-sub-links">
                <p style="text-align: center">
                    Already a member? <a href="@Url.Content("~/SignIn")" data-ajax="false">Sign
                        In</a></p>
            </div>
        </div>

    </div>
     @{Html.RenderPartial("WelcomeMenu", new Mobile_PaidThx.Models.MenuModel() { SelectedTabIndex = 2, HeaderText = "Join" }); }
             
<script type="text/javascript">
    //$(document).delegate('#page-join', 'pageinit', function () {
    $(document).ready(function () {
        $.validator.addMethod("passwrdvalidator", function (value, element) {
            return this.optional(element) || /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{6,30}$/.test(value);
        });

        $('#registration-form #password').qtip({
            content: {
                text: $('#pass'),
                title: {
                    text: 'Password Strength',
                    button: true
                }
            },
            position: {
                my: 'bottom center',
                at: 'top center'
            },
            show: {
                event: 'focus',
                solo: true
            },
            hide: {
                event: 'blur'
            },
            style: {
                classes: 'ui-tooltip qtip ui-tooltip-default ui-tooltip-rounded ui-tooltip-shadow ui-tooltip-light',
                width: "88%"
            }
        });

        $('#registration-form #confirmPasswordHolder').hide();

        $('#registration-form #password').keyup(function () {
            var pswd = $(this).val();

            //validate the length
            if (pswd.length < 6) {
                $('#length').removeClass('valid').addClass('invalid');
            } else {
                $('#length').removeClass('invalid').addClass('valid');
            }

            //validate letter
            if (pswd.match(/[A-z]/)) {
                $('#letter').removeClass('invalid').addClass('valid');
            } else {
                $('#letter').removeClass('valid').addClass('invalid');
            }

            //validate capital letter
            if (pswd.match(/[A-Z]/)) {
                $('#capital').removeClass('invalid').addClass('valid');
            } else {
                $('#capital').removeClass('valid').addClass('invalid');
            }

            //validate number
            if (pswd.match(/\d/)) {
                $('#number').removeClass('invalid').addClass('valid');
            } else {
                $('#number').removeClass('valid').addClass('invalid');
            }

            if ((pswd.match(/\d/)) && (pswd.match(/[A-Z]/)) && (pswd.match(/[A-z]/)) && (pswd.length > 5)) {
                $('#confirmPasswordHolder').css("display", "block");
                $('#confirmPasswordHolder').fadeIn(800);
            } else {

            }

        });

        $("#frmSubmit").validate({
            submitHandler: function (form) {
                form.submit();
            },
            invalidHandler: function (form, validator) {
                //invalid                
            },
            showErrors: function (errorMap, errorList) {
                if (errorList.length) {
                    var s = errorList.shift();
                    var n = [];
                    n.push(s);
                    this.errorList = n;
                }
                this.defaultShowErrors();
            },
            onkeyup: false,
            onfocusout: function (element) { $(element).valid(); },
            errorClass: 'error',
            validClass: 'valid',
            rules: {
                password: {
                    required: true,
                    passwrdvalidator: true,
                    minlength: 6
                },
                confirmPassword: {
                    required: true,
                    minlength: 6,
                    equalTo: "#registration-form #password"
                },
                email: {
                    required: true,
                    email: true
                }
            },
            messages: {
                password: {
                    required: "Password must be at least 6 characters long, contain at least 1 letter, 1 number, and 1 uppercase character.",
                    passwrdvalidator: "Password must be at least 6 characters long, contain at least 1 letter, 1 number, and 1 uppercase character."
                    //minlength: "Password must be at least 6 characters long, contain at least 1 letter, 1 number, and 1 uppercase character."
                },
                confirmPassword: {
                    required: "Please confirm your password",
                    minlength: "Your password must be at least 6 characters long",
                    equalTo: "Please enter the same password as above"
                },
                email: {
                    required: "Please enter your email address",
                    email: "Please enter a valid email address"
                }
            },
            errorPlacement: function (error, element) {
                // Set positioning based on the elements position in the form
                var elem = $(element);
                // Check we have a valid error message
                if (!error.is(':empty')) {
                    // Apply the tooltip only if it isn't valid
                    elem.filter(':not(.valid)').qtip({
                        overwrite: true,
                        content: error,
                        position: {
                            my: 'bottom center',
                            at: 'top center'
                        },
                        show: {
                            event: false,
                            solo: true,
                            ready: true
                        },
                        hide: false,
                        style: {
                            classes: 'ui-tooltip-red ui-tooltip qtip ui-tooltip-default ui-tooltip-rounded ui-tooltip-shadow ui-tooltip-light tip-error'
                        }
                    }).qtip({
                        overwrite: true,
                        content: error,
                        position: {
                            my: 'bottom center',
                            at: 'top center'
                        },
                        show: {
                            event: false,
                            solo: true,
                            ready: true
                        },
                        hide: false,
                        style: {
                            classes: 'ui-tooltip-red ui-tooltip qtip ui-tooltip-default ui-tooltip-shadow ui-tooltip-light tip-error',
                            width: "88%"

                        }
                    });
                }

                else {
                    elem.qtip('destroy');
                }
            },
            success: $.noop
        });
        //$("#password").valid();
        $('.tip-error').bind('tooltipshow', function () {
            $("div.tip-error:not(:first)").hide();
            alert('trying to hide');
        });
        
        //$('#registration-form span.form-holder input').blur(function () {
         //   $.validator.validate();
        //});
    });
    </script>

</div>
