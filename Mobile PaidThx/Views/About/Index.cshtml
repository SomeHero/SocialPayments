@{
    ViewBag.Title = "Index";
    ViewBag.PageID = "page-about";
    ViewBag.Classes = "";
}
<div data-role="page" id="@ViewBag.PageID" class="@ViewBag.Classes"  >
    
    <div data-role="header" data-position="fixed" class="nav-pdthx" >
        <h1>About PaidThx</h1>
    @{Html.RenderPartial("WelcomeMenuTop", new Mobile_PaidThx.Models.MenuModel() { SelectedTabIndex = 3, HeaderText = "About" }); }
    </div>
    <div data-role="content">
    <div class="pad">

     <!-- SLIDER -->
               <div id="home-slider" class="flex-container main-slider">
                  <div id="about-slider" class="flexslider">
                    <ul class="slides">
                        <li>
                        <div class="video-holder">
               <a class="video-link fancybox.iframe"  title="PaidThx" href="http://www.youtube.com/v/-bFf3yi7cNM?fs=1&amp;autoplay=1&rel=0"><img alt="Video" class="grow90 video" src="@Url.Content("~/Content/images/video.png")" /></a></div>
               <h3>ABOUT PAIDTHX</h3>
                          <p>PaidThx is here to help you send &amp; receive money, free and easy.  Watch the video above or swipe to learn more.</p>
                        </li>
                        <li>
                        <div class="icon-holder">
               <img alt="Send Money" class="grow80" src="@Url.Content("~/Content/images/send-icon-big.png")" /></div>
                           <h3>SEND MONEY</h3>
                            <p>With PaidThx - sending money to a friend, family member or even an organization or business is simple and free.</p>
                        </li>
                        <li>
                        <div class="icon-holder">
               <img alt="Request Money" class="grow80" src="@Url.Content("~/Content/images/request-icon-big.png")" /></div>
						 <h3>REQUEST MONEY</h3>
                            <p>Friends still owe you money from weeks ago?  Send them a request using PaidThx - no more excuses.</p>
                        </li>
                        <li>
                        <div class="icon-holder">
               <img alt="Do Good" class="grow80" src="@Url.Content("~/Content/images/dogood-icon-big.png")" /></div>
						 <h3>DO GOOD</h3>
                            <p>Now you can give wherever you are.  And 100% of your generosity goes directly to the organizations you support.</p>
                            </li>
                        <li>
                        <div class="icon-holder">
               <img alt="Activity" class="grow80" src="@Url.Content("~/Content/images/activity-icon-big.png")" /></div>
						  <h3>KEEP TABS</h3>
                            <p>The PaidThx Paystream is the news feed for your personal finances.  View recent activity, send reminders, and more.</p>
                        </li>
                        
                    </ul>
                  </div>
                </div>
                <!-- SLIDER -->
        </div>
    </div>
    
       <div data-role="footer"> 
	<h4>For even more info, visit our <a title="Learn More" target="_blank" href="https://paidthx.zendesk.com/forums">FAQs</a></h4> 
</div> 
    @{Html.RenderPartial("WelcomeMenu", new Mobile_PaidThx.Models.MenuModel() { SelectedTabIndex = 3, HeaderText = "About" }); }

    @section PageStyles{

<!-- FLEXSLIDER -->
        <link type="text/css" rel="stylesheet" href="@Url.Content("~/Libs/flexslider/flexslider.css")" />

    }



    @section PageScripts{

<script type="text/javascript" src="@Url.Content("~/Scripts/flexslider/jquery.flexslider-min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/flexslider/jquery.fitvid.js")"></script>
<script type="text/javascript">

    $(document).ready(function() {

            $(".video-link").fancybox({
					maxWidth	: 800,
					maxHeight	: 600,
					fitToView	: true,
//					width		: '95%',
//					height		: '95%',
					autoSize: true,
                    aspectRatio: true,
					closeClick	: false,
					openEffect	: 'elastic',
					closeEffect: 'elastic'
				});
     

        // FLEX SLIDER 

        $('.flexslider').flexslider({
            animation: "slide",
            controlsContainer: ".flex-control-nav",
            namespace: "flex-",             //{NEW} String: Prefix string attached to the class of every element generated by the plugin
            selector: ".slides > li",       //{NEW} Selector: Must match a simple pattern. '{container} > {slide}' -- Ignore pattern at your own peril
            animation: "slide",              //String: Select your animation type, "fade" or "slide"
            easing: "easeInBack",               //{NEW} String: Determines the easing method used in jQuery transitions. jQuery easing plugin is supported!
            direction: "horizontal",        //String: Select the sliding direction, "horizontal" or "vertical"
            reverse: false,                 //{NEW} Boolean: Reverse the animation direction
            animationLoop: true,             //Boolean: Should the animation loop? If false, directionNav will received "disable" classes at either end
            smoothHeight: true,            //{NEW} Boolean: Allow height of the slider to animate smoothly in horizontal mode
            startAt: 0,                     //Integer: The slide that the slider should start on. Array notation (0 = first slide)
            slideshow: false,                //Boolean: Animate slider automatically
            slideshowSpeed: 10000,           //Integer: Set the speed of the slideshow cycling, in milliseconds
            animationSpeed: 600,            //Integer: Set the speed of animations, in milliseconds
            initDelay: 0,                   //{NEW} Integer: Set an initialization delay, in milliseconds
            randomize: false,               //Boolean: Randomize slide order

            // Usability features
            pauseOnAction: true,            //Boolean: Pause the slideshow when interacting with control elements, highly recommended.
            pauseOnHover: true,            //Boolean: Pause the slideshow when hovering over slider, then resume when no longer hovering
            useCSS: true,                   //{NEW} Boolean: Slider will use CSS3 transitions if available
            touch: true,                    //{NEW} Boolean: Allow touch swipe navigation of the slider on touch-enabled devices
            video: false,                   //{NEW} Boolean: If using video in the slider, will prevent CSS3 3D Transforms to avoid graphical glitches

            // Primary Controls
            controlNav: true,               //Boolean: Create navigation for paging control of each clide? Note: Leave true for manualControls usage
            directionNav: false,             //Boolean: Create navigation for previous/next navigation? (true/false)
            //prevText: "Previous",           //String: Set the text for the "previous" directionNav item
            //nextText: "Next",               //String: Set the text for the "next" directionNav item

            // Secondary Navigation
            keyboard: true,                 //Boolean: Allow slider navigating via keyboard left/right keys
            multipleKeyboard: false,        //{NEW} Boolean: Allow keyboard navigation to affect multiple sliders. Default behavior cuts out keyboard navigation with more than one slider present.
            mousewheel: false,              //{UPDATED} Boolean: Requires jquery.mousewheel.js (https://github.com/brandonaaron/jquery-mousewheel) - Allows slider navigating via mousewheel
            pausePlay: false,               //Boolean: Create pause/play dynamic element
            pauseText: 'Pause',             //String: Set the text for the "pause" pausePlay item
            playText: 'Play',               //String: Set the text for the "play" pausePlay item

            // Special properties
            controlsContainer: "flex-control-nav",          //{UPDATED} Selector: USE CLASS SELECTOR. Declare which container the navigation elements should be appended too. Default container is the FlexSlider element. Example use would be ".flexslider-container". Property is ignored if given element is not found.
            manualControls: "flex-control-nav li",             //Selector: Declare custom control navigation. Examples would be ".flex-control-nav li" or "#tabs-nav li img", etc. The number of elements in your controlNav should match the number of slides/tabs.
            sync: "",                       //{NEW} Selector: Mirror the actions performed on this slider with another slider. Use with care.
            asNavFor: "",                   //{NEW} Selector: Internal property exposed for turning the slider into a thumbnail navigation for another slider

            // Carousel Options
            //itemWidth: 0,                   //{NEW} Integer: Box-model width of individual carousel items, including horizontal borders and padding.
            itemMargin: 40,                  //{NEW} Integer: Margin between carousel items.
            minItems: 0,                    //{NEW} Integer: Minimum number of carousel items that should be visible. Items will resize fluidly when below this.
            //maxItems: 0,                    //{NEW} Integer: Maxmimum number of carousel items that should be visible. Items will resize fluidly when above this limit.
            move: 0,                        //{NEW} Integer: Number of carousel items that should move on animation. If 0, slider will move all visible items.

            // Callback API
            start: function (slider) {
                $('.flexslider').css("background-image", "none");
            },            //Callback: function(slider) - Fires when the slider loads the first slide
            before: function (slider) { },      //Callback: function(slider) - Fires asynchronously with each slider animation
            after: function (slider) { },
            end: function () { },              //Callback: function(slider) - Fires when the slider reaches the last slide (asynchronous)
            added: function () { },            //{NEW} Callback: function(slider) - Fires after a slide is added
            removed: function () { }           //{NEW} Callback: function(slider) - Fires after a slide is removed

        });
    });
</script>
}
</div>


