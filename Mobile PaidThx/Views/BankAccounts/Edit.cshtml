@model Mobile_PaidThx.Models.BankAccountModels.EditPaymentAccountModel
@{
    ViewBag.Title = "PaymentAccount";
    ViewBag.PageID = "preferences-bankaccounts-edit-page";
    ViewBag.Classes = "page settings";
    TempData["DataUrl"] = String.Format("data-url=/mobile/BankAccounts/Edit/{0}", Model.PaymentAccountId);
}
<div  id="@ViewBag.PageID" class="@ViewBag.Classes"  >
    
    <div class="header-pdthx" >
        <h1>
            Details</h1>
            <a href="@Url.Content("~/BankAccounts")"  class="hd-btn-left btn-back">Back</a>
    </div>
    <div class="pd-content">
        <div class="top-panel">
            <p>
                To enable sending payments from this bank account, please verify it. <a class="pd-btn blue" href="@Url.Content("~/BankAccounts/VerifyAccount/" + @Model.PaymentAccountId)">
                        Verify Account
                </a>
            </p>
        </div>
        @Html.ValidationSummary()
        <div class="pad">
        
        @using (Html.BeginForm("Edit", "BankAccounts", FormMethod.Post, new Dictionary<string, object> { { "data-transition", "slideup" }}))
        {
            <p>
                <input type="text" id="txtNickname" name="Nickname" placeholder="Create an Account Nickname"
                    required value="@Model.Nickname" /></p>
            <p>
                <input type="text" id="txtNameOnAccount" name="NameOnAccount" placeholder=" Name on the Account"
                    required value="@Model.NameOnAccount" /></p>
            <p>
                <input type="text" id="txtRoutingNumber" name="RoutingNumber" placeholder="Routing Number"
                    required value="@Model.RoutingNumber" /></p>
            <p>
                <input type="text" id="txtAccountNumber" name="AccountNumber" placeholder="Account Number"
                    required value="@Model.AccountNumber" /></p> 
            <div data-role="fieldcontain">
                <fieldset data-role="controlgroup" data-type="horizontal">
                    @foreach (var radioItem in Model.AccountTypeOptions)
                    {
                        if (Model.AccountType == radioItem.Value)
                        {
                            <input class="cs-radio input_hidden" type="radio" name="AccountType" id="radio-choice-@radioItem.Value" value="@radioItem.Value" checked="checked" />
                            <label class="cs-radio-label selected" for="radio-choice-@radioItem.Value">
                                @radioItem.Text</label>
                        }
                        else
                        {
                            <input class="cs-radio input_hidden" type="radio" name="AccountType" id="radio-choice-@radioItem.Value" value="@radioItem.Value" />
                            <label class="cs-radio-label" for="radio-choice-@radioItem.Value">
                                @radioItem.Text</label>
                        }
                    }
                </fieldset>
            </div>
            <p>
                <input type="hidden" name="PaymentAccountId" value="@Model.PaymentAccountId" />
                <button type="submit" id="btn-update-account" data-theme="f" data-icon="check" data-iconpos="right"
                    class="pd-btn green">
                    Confirm Changes</button></p>
        }
        @using (Html.BeginForm("Delete", "BankAccounts", FormMethod.Post, new Dictionary<string, object> { { "data-transition", "slideup" } }))
        {
            <p>
                <input type="hidden" name="PaymentAccountId" value="@Model.PaymentAccountId" />
                <button type="submit" id="btn-remove-account" data-theme="e" data-icon="delete" data-iconpos="right"
                    class="pd-btn red">
                    Remove Account</button>
            </p>
        }
    </div>
    </div>
</div>

@section PageScripts
{
        <script type="text/javascript">
            $(document).ready(function () {

                $('.cs-radio').addClass('input_hidden');
                $('.cs-radio-label').click(function (event) {
                    $(this).addClass('selected').siblings().removeClass('selected');
                });


            });
    </script>
}
