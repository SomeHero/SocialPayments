@model PagedList.IPagedList<SocialPayments.Web.Admin.Models.UserModel>

@{
    ViewBag.Title = "Users";
}

<h2>Users</h2>

<table>
    <tr>
        <th>Id</th>
        <th>Mobile Number</th>
        <th>
            User Name
        </th>
        <th>
            Email Address
        </th>
        <th>
            Confirmed
        </th>
        <th>
            Sign Up Date
        </th>
        <th>
            Confirmed Date
        </th>
        
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Id)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MobileNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EmailAddress)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsConfirmed)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SignUpDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ConfirmedDate)
        </td>
        
    </tr>
}

</table>

<div> 
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) 
    of @Model.PageCount 
      
    @if (Model.HasPreviousPage) 
    { 
        @Html.ActionLink("<<", "Index", new { pageIndex = 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  }) 
        @Html.Raw(" "); 
        @Html.ActionLink("< Prev", "Index", new { pageIndex = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  }) 
    } 
    else 
    { 
        @:<< 
        @Html.Raw(" "); 
        @:< Prev 
    } 
      
    @if (Model.HasNextPage) 
    { 
        @Html.ActionLink("Next >", "Index", new { pageIndex = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  }) 
        @Html.Raw(" "); 
        @Html.ActionLink(">>", "Index", new { pageIndex = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  }) 
    } 
    else 
    { 
        @:Next > 
        @Html.Raw(" ") 
        @:>> 
    } 
</div>
