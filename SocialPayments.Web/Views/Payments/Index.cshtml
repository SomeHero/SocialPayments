@model PagedList.IPagedList<SocialPayments.Web.Models.PaymentModel>

@{
    ViewBag.Title = "My Payments";
}

<h2>My Payments</h2>

<table>
    <tr>
        <th>
            Payment Date
        </th>
        <th>
            Delivered To
        </th>
        <th>
            Payment Amount
        </th>
        <th>
            Payment Status
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.PaymentDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ToMobileNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PaymentAmount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PaymentStatus)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
        </td>
    </tr>
}

</table>

<div> 
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) 
    of @Model.PageCount 
      
    @if (Model.HasPreviousPage) 
    { 
        @Html.ActionLink("<<", "Index", new { pageIndex = 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  }) 
        @Html.Raw(" "); 
        @Html.ActionLink("< Prev", "Index", new { pageIndex = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  }) 
    } 
    else 
    { 
        @:<< 
        @Html.Raw(" "); 
        @:< Prev 
    } 
      
    @if (Model.HasNextPage) 
    { 
        @Html.ActionLink("Next >", "Index", new { pageIndex = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  }) 
        @Html.Raw(" "); 
        @Html.ActionLink(">>", "Index", new { pageIndex = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  }) 
    } 
    else 
    { 
        @:Next > 
        @Html.Raw(" ") 
        @:>> 
    } 
</div>